name: Compose 2

on:
    push:
        paths:
            - .github/workflows/build_compose.yml
            - compose.test2.yml
            - compose.test2.ci.yml
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            registry-cache-key: ${{ steps.cache.outputs.cache-primary-key }}
        steps:
            - 
                uses: actions/checkout@v3
            - 
                name: Get hash
                id: get-hash
                run: |
                    echo "build_hash=${{ hashFiles( \
                    'compose.test2.yml', \
                    'compose.test2.ci.yml', \
                    'Test2.Dockerfile') }}" >> "$GITHUB_OUTPUT"
            - 
                name: Check Cache of Docker Registry
                id: cache
                uses: actions/cache/restore@v3
                with:
                    path: /tmp/docker-registry
                    key: docker-registry-${{ github.ref }}-${{ steps.get-hash.outputs.build_hash }}
                    lookup-only: true
            -   
                name: Cache Docker Build Cache
                if: steps.cache.outputs.cache-hit != 'true'
                uses: actions/cache@v3
                with:
                    path: /tmp/.buildx-cache
                    key: docker-build-cache-${{ github.ref }}-${{ steps.get-hash.outputs.build_hash }}
                    restore-keys: |
                        docker-build-cache-${{ github.ref }}
                        docker-build-cache-
            - 
                uses: docker/setup-buildx-action@v2
                if: steps.cache.outputs.cache-hit != 'true'
                with:
                    driver-opts: network=host
            -
                name: Make directories
                if: steps.cache.outputs.cache-hit != 'true'
                run: |
                    mkdir -p /tmp/docker-registry /tmp/.buildx-cache /tmp/.buildx-cache-new
                    ls -al /tmp
            - 
                run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2
                if: steps.cache.outputs.cache-hit != 'true'
            -
                run: npx wait-on tcp:5000
                if: steps.cache.outputs.cache-hit != 'true'
            -
                name: Call before build
                if: steps.cache.outputs.cache-hit != 'true'
                run: |
                    images=$(curl -sS http://localhost:5000/v2/_catalog)
                    echo "$images"
                    for i in $(echo "$images" | jq -r '.repositories | .[]'); do
                        curl -sS "http://localhost:5000/v2/${i}/tags/list"
                    done
            -
                name: Build images
                if: steps.cache.outputs.cache-hit != 'true'
                uses: docker/bake-action@v2
                with:
                    push: true
                    files: |
                        "compose.test2.yml"
                        "compose.test2.ci.yml"
                    set: |
                        "*.cache-from=type=local,src=/tmp/.buildx-cache"
                        "*.cache-to=type=local,dest=/tmp/.buildx-cache-new"
            - 
                name: Move build cache files
                if: steps.cache.outputs.cache-hit != 'true'
                run: |
                    rm -rf /tmp/.buildx-cache
                    mv /tmp/.buildx-cache-new /tmp/.buildx-cache
            -
                name: Call after build
                if: steps.cache.outputs.cache-hit != 'true'
                run: |
                    images=$(curl -sS http://localhost:5000/v2/_catalog)
                    echo "$images"
                    for i in $(echo "$images" | jq -r '.repositories | .[]'); do
                        curl -sS "http://localhost:5000/v2/${i}/tags/list"
                    done
            -
                name: Save Cache of Docker Registry
                if: steps.cache.outputs.cache-hit != 'true'
                uses: actions/cache/save@v3
                with:
                    path: /tmp/docker-registry
                    key: ${{ steps.cache.outputs.cache-primary-key }}

    test:
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            - 
                uses: actions/checkout@v3
            - 
                name: Get Cache of Docker Registry
                id: get-registory-cache
                uses: actions/cache/restore@v3
                with:
                    path: /tmp/docker-registry
                    key: ${{ needs.build.outputs.registry-cache-key }}
                    fail-on-cache-miss: true
            -
                name: Start registory server
                run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2
            - 
                name: Compose pull
                run: docker compose -f compose.test2.yml -f compose.test2.ci.yml pull
            -
                name: Compose up
                run: docker compose -f compose.test2.yml -f compose.test2.ci.yml up
